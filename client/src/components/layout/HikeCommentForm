import React from "react";
import axios from "axios";

class HikeCommentForm extends React.Component {

    constructor(props) {
        super(props);
        // Don't call this.setState() here!
        this.state = { comment: "", hikeId: this.props.hikeId };
        this.handleCommentChange = this.handleCommentChange.bind(this);
        this.onSubmit = this.onSubmit.bind(this);

    }

    handleCommentChange(event) {
        this.setState({comment: event.target.value});
    }

    onSubmit = async e => {
        console.log("sanity test");
        e.preventDefault();
        const commentData = {
            hikeId: this.state.hikeId,
            comment: this.state.comment
        };
        // {
        //     "hikeId": "5ce9a06bafd48c70f67a7464",
        //     "comment": "My quads are burning after this hike!"
        // }

        try {
            const response = await axios.post('/api/comment', commentData);
            console.log(':point_right: Returned data:', response);

            // You should probably use a callback to the parent function to update the comments, or maybe this functionality should be lifted up the HikeDetail level ( the api s

        } catch (e) {
            console.log(`ðŸ˜± Axios request failed: ${e}`);
        }
    };


    render() {
        return (
            <div>
                <form onSubmit={this.onSubmit}>
                    Comment:
                    <br></br>
                    <input type="text" name="comment" value={this.state.comment} onChange={this.handleCommentChange}/>
                    <input type="submit" value="Submit" />
                </form>
            </div>
        );
    }
};

export default HikeCommentForm;